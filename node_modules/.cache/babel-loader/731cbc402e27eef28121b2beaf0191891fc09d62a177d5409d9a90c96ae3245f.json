{"ast":null,"code":"let faceInputElement = null;\nexport default {\n  data() {\n    return {\n      faceImageUrl: \"\",\n      // 存储人脸图像 URL\n      generatedImageUrl: \"\",\n      // 存储后端返回的生成图片 URL\n      backgroundImages: [\n      // 背景模版列表\n      \"background1.jpg\",\n      // 替换为实际图片路径\n      \"background2.jpg\", \"background3.jpg\", \"background4.jpg\"],\n      selectedBackground: \".background1.jpg\" // 默认背景\n    };\n  },\n  methods: {\n    // 点击上传头像\n    toGetFaceImg() {\n      if (!faceInputElement) {\n        faceInputElement = this.createInputElement(this.uploadFaceImage);\n      }\n      faceInputElement.click();\n    },\n    // 创建上传控件\n    createInputElement(callback) {\n      const input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"file\");\n      input.style.display = \"none\";\n      input.addEventListener(\"change\", callback, false);\n      document.body.appendChild(input);\n      return input;\n    },\n    // 上传头像逻辑\n    uploadFaceImage(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      const isImage = file.type.indexOf(\"image\") !== -1;\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        alert(\"请选择图片文件！\");\n        return;\n      }\n      if (!isLt2M) {\n        alert(\"上传图片大小不能超过 2MB！\");\n        return;\n      }\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.faceImageUrl = reader.result; // 设置头像图片 URL\n      };\n    },\n    // 选择背景图片\n    selectBackground(image) {\n      this.selectedBackground = image; // 更新全局背景\n    }\n  },\n  beforeDestroy() {\n    // 清理上传控件\n    if (faceInputElement) {\n      faceInputElement.removeEventListener(\"change\", this.uploadFaceImage);\n      document.body.removeChild(faceInputElement);\n      faceInputElement = null;\n    }\n  }\n};","map":{"version":3,"names":["faceInputElement","data","faceImageUrl","generatedImageUrl","backgroundImages","selectedBackground","methods","toGetFaceImg","createInputElement","uploadFaceImage","click","callback","input","document","createElement","setAttribute","style","display","addEventListener","body","appendChild","event","file","target","files","isImage","type","indexOf","isLt2M","size","alert","reader","FileReader","readAsDataURL","onload","result","selectBackground","image","beforeDestroy","removeEventListener","removeChild"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"page-container\" :style=\"{ backgroundImage: `url(${selectedBackground})` }\">\n    <!-- 中间区域 -->\n    <div class=\"main-content\">\n      <!-- 左侧上传头像 -->\n      <div class=\"upload-panel\">\n        <div class=\"upload-box\" @click=\"toGetFaceImg\">\n          <img :src=\"faceImageUrl\" v-if=\"faceImageUrl\" alt=\"人脸图像\" />\n          <p v-else>点击上传头像</p>\n        </div>\n      </div>\n\n      <!-- 右侧生成图展示 -->\n      <div class=\"output-panel\">\n        <div class=\"output-box\">\n          <img :src=\"generatedImageUrl\" v-if=\"generatedImageUrl\" alt=\"生成图片\" />\n          <p v-else>生成的图片将在这里展示</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 底部轮播图区域 -->\n    <div class=\"carousel-container\">\n      <div\n        v-for=\"(image, index) in backgroundImages\"\n        :key=\"index\"\n        class=\"carousel-item\"\n        @click=\"selectBackground(image)\"\n      >\n        <img :src=\"image\" alt=\"背景模版\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nlet faceInputElement = null;\n\nexport default {\n  data() {\n    return {\n      faceImageUrl: \"\", // 存储人脸图像 URL\n      generatedImageUrl: \"\", // 存储后端返回的生成图片 URL\n      backgroundImages: [ // 背景模版列表\n        \"background1.jpg\", // 替换为实际图片路径\n        \"background2.jpg\",\n        \"background3.jpg\",\n        \"background4.jpg\",\n      ],\n      selectedBackground: \".background1.jpg\", // 默认背景\n    };\n  },\n  methods: {\n    // 点击上传头像\n    toGetFaceImg() {\n      if (!faceInputElement) {\n        faceInputElement = this.createInputElement(this.uploadFaceImage);\n      }\n      faceInputElement.click();\n    },\n    // 创建上传控件\n    createInputElement(callback) {\n      const input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"file\");\n      input.style.display = \"none\";\n      input.addEventListener(\"change\", callback, false);\n      document.body.appendChild(input);\n      return input;\n    },\n    // 上传头像逻辑\n    uploadFaceImage(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      const isImage = file.type.indexOf(\"image\") !== -1;\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isImage) {\n        alert(\"请选择图片文件！\");\n        return;\n      }\n      if (!isLt2M) {\n        alert(\"上传图片大小不能超过 2MB！\");\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.faceImageUrl = reader.result; // 设置头像图片 URL\n      };\n    },\n    // 选择背景图片\n    selectBackground(image) {\n      this.selectedBackground = image; // 更新全局背景\n    },\n  },\n  beforeDestroy() {\n    // 清理上传控件\n    if (faceInputElement) {\n      faceInputElement.removeEventListener(\"change\", this.uploadFaceImage);\n      document.body.removeChild(faceInputElement);\n      faceInputElement = null;\n    }\n  },\n};\n</script>\n\n<style>\n/* 页面容器，全局背景 */\n.page-container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n/* 中间区域 */\n.main-content {\n  display: flex;\n  flex: 1;\n}\n\n/* 左侧上传头像 */\n.upload-panel {\n  width: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.upload-box {\n  width: 200px;\n  height: 200px;\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  text-align: center;\n  background: rgba(255, 255, 255, 0.8);\n}\n\n/* 右侧生成框 */\n.output-panel {\n  width: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.output-box {\n  width: 90%;\n  height: 90%;\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  background: rgba(255, 255, 255, 0.8);\n}\n\n/* 底部轮播图 */\n.carousel-container {\n  height: 15%;\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  background: rgba(255, 255, 255, 0.8);\n  padding: 10px;\n}\n\n.carousel-item {\n  flex: 0 0 auto;\n  margin: 0 10px;\n  cursor: pointer;\n}\n\n.carousel-item img {\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"AAoCA,IAAAA,gBAAA;AAEA;EACAC,KAAA;IACA;MACAC,YAAA;MAAA;MACAC,iBAAA;MAAA;MACAC,gBAAA;MAAA;MACA;MAAA;MACA,mBACA,mBACA,kBACA;MACAC,kBAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,aAAA;MACA,KAAAP,gBAAA;QACAA,gBAAA,QAAAQ,kBAAA,MAAAC,eAAA;MACA;MACAT,gBAAA,CAAAU,KAAA;IACA;IACA;IACAF,mBAAAG,QAAA;MACA,MAAAC,KAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,KAAA,CAAAG,YAAA;MACAH,KAAA,CAAAI,KAAA,CAAAC,OAAA;MACAL,KAAA,CAAAM,gBAAA,WAAAP,QAAA;MACAE,QAAA,CAAAM,IAAA,CAAAC,WAAA,CAAAR,KAAA;MACA,OAAAA,KAAA;IACA;IACA;IACAH,gBAAAY,KAAA;MACA,MAAAC,IAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,KAAAF,IAAA;MAEA,MAAAG,OAAA,GAAAH,IAAA,CAAAI,IAAA,CAAAC,OAAA;MACA,MAAAC,MAAA,GAAAN,IAAA,CAAAO,IAAA;MAEA,KAAAJ,OAAA;QACAK,KAAA;QACA;MACA;MACA,KAAAF,MAAA;QACAE,KAAA;QACA;MACA;MAEA,MAAAC,MAAA,OAAAC,UAAA;MACAD,MAAA,CAAAE,aAAA,CAAAX,IAAA;MACAS,MAAA,CAAAG,MAAA;QACA,KAAAhC,YAAA,GAAA6B,MAAA,CAAAI,MAAA;MACA;IACA;IACA;IACAC,iBAAAC,KAAA;MACA,KAAAhC,kBAAA,GAAAgC,KAAA;IACA;EACA;EACAC,cAAA;IACA;IACA,IAAAtC,gBAAA;MACAA,gBAAA,CAAAuC,mBAAA,gBAAA9B,eAAA;MACAI,QAAA,CAAAM,IAAA,CAAAqB,WAAA,CAAAxC,gBAAA;MACAA,gBAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}