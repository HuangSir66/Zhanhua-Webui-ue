{"ast":null,"code":"import QRCode from \"qrcode\";\nlet inputElement = null;\nexport default {\n  data() {\n    return {\n      valueUrl: require(\"../assets/example/zhanmin.jpg\"),\n      outUrl: require(\"../assets/example/shengExample.jpg\"),\n      isImg: false,\n      // 控制加载动画显示与隐藏\n      style: \"\",\n      selectedDynasty: null,\n      url: \"\",\n      // 这个是输入框的值\n      qrCode: \"\",\n      // 这个是二维码图片的url\n      dynasties: [\n        // { clothingSrc: require(\"@/assets/clothing/sheng.png\"), buttonSrc: require(\"../assets/clothing/shengb.png\"),dynasties:'sheng' },\n        // { clothingSrc: require(\"@/assets/clothing/dan.png\"), buttonSrc: require(\"@/assets/clothing/danb.png\"),dynasties:'dan' },\n        // { clothingSrc: require(\"@/assets/clothing/jing.png\"), buttonSrc: require(\"@/assets/clothing/jingb.png\"),dynasties:'jing'  },\n        // { clothingSrc: require(\"@/assets/clothing/chou.png\"), buttonSrc: require(\"@/assets/clothing/choub.png\"),dynasties:'chou'  }\n      ]\n    };\n  },\n  methods: {\n    toGetImg() {\n      if (inputElement === null) {\n        // 生成文件上传的控件\n        inputElement = document.createElement('input');\n        inputElement.setAttribute('type', 'file');\n        inputElement.style.display = 'none';\n        if (window.addEventListener) {\n          inputElement.addEventListener('change', this.uploadFile, false);\n        } else {\n          inputElement.attachEvent('onchange', this.uploadFile);\n        }\n        document.body.appendChild(inputElement);\n      }\n      inputElement.click();\n    },\n    uploadFile(el) {\n      if (el && el.target && el.target.files && el.target.files.length > 0) {\n        const files = el.target.files[0];\n        const isLt2M = files.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n          this.$message.error('上传图片大小不能超过 2MB!');\n        } else if (files.type.indexOf('image') === -1) {\n          this.$message.error('请选择图片文件');\n        } else {\n          const reader = new FileReader();\n          reader.readAsDataURL(files);\n          this.$message({\n            message: '图片上传成功',\n            type: 'success'\n          });\n          reader.onload = () => {\n            this.valueUrl = reader.result;\n          };\n        }\n      }\n    },\n    sentImage() {\n      if (this.valueUrl == require(\"../assets/example/zhanmin.jpg\")) {\n        this.$message.error('请先上传您自己的图片');\n        return;\n      }\n      if (!this.valueUrl) {\n        this.$message.error('请先上传图片');\n        return;\n      }\n      if (this.style == '') {\n        this.$message.error('请先选择朝代');\n      } else {\n        this.$message({\n          message: '图片上传成功,正在生成',\n          type: 'success'\n        });\n        this.outUrl = require(\"../assets/loading.gif\");\n        sentClothImg({\n          image: this.valueUrl.split(',')[1],\n          style: this.style\n        }).then(response => {\n          this.isImg = true;\n          const stylizedImage = response.data.stylized_image;\n          this.outUrl = 'data:image/jpeg;base64,' + stylizedImage;\n        }).catch(error => {\n          this.loading = false;\n          console.error('Error uploading image: ', error);\n        });\n      }\n    },\n    selectDynasty(index, dynasties) {\n      this.selectedDynasty = index;\n      this.style = dynasties.dynasties;\n    },\n    isSelected(index) {\n      return this.selectedDynasty === index;\n    },\n    generateQRCode() {\n      // 生成二维码逻辑(参数指定url文字即可)\n      QRCode.toDataURL(this.url).then(async qr => {\n        this.qrCode = qr;\n        // 生成完二维码重新对容器的内容进行图片的生成\n        // 这里会有异步情况,建议等一会\n      }).catch(error => {\n        console.error(\"生成二维码出错：\", error);\n      });\n    },\n    downloadImage(event) {\n      if (this.outUrl && this.outUrl != require(\"../assets/loading.gif\")) {\n        const link = document.createElement('a');\n        link.href = this.outUrl;\n        link.download = 'stylized_image.jpg'; // 设置下载后的文件名\n        document.body.appendChild(link);\n        this.url = link.href;\n        this.generateQRCode();\n        document.body.removeChild(link);\n      } else if (!this.valueUrl) {\n        this.$message.error('请先上传图片');\n      } else {\n        this.$message.error('正在加载中');\n      }\n    }\n  },\n  beforeDestroy() {\n    if (inputElement) {\n      if (window.addEventListener) {\n        inputElement.removeEventListener('change', this.onGetLocalFile, false);\n      } else {\n        inputElement.detachEvent('onchange', this.onGetLocalFile);\n      }\n      document.body.removeChild(inputElement);\n      inputElement = null;\n      console.log('========inputelement destroy');\n    }\n  }\n};","map":{"version":3,"names":["QRCode","inputElement","data","valueUrl","require","outUrl","isImg","style","selectedDynasty","url","qrCode","dynasties","methods","toGetImg","document","createElement","setAttribute","display","window","addEventListener","uploadFile","attachEvent","body","appendChild","click","el","target","files","length","isLt2M","size","$message","error","type","indexOf","reader","FileReader","readAsDataURL","message","onload","result","sentImage","sentClothImg","image","split","then","response","stylizedImage","stylized_image","catch","loading","console","selectDynasty","index","isSelected","generateQRCode","toDataURL","qr","downloadImage","event","link","href","download","removeChild","beforeDestroy","removeEventListener","onGetLocalFile","detachEvent","log"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"clothing\" id=\"clothing-v\">\n    <div class=\"leadImg\">\n      <div class=\"smallImg-div\" @click=\"toGetImg\">\n        <img class=\"smallImg\" :src=valueUrl v-if=\"valueUrl\">\n        <div class=\"smallText\" v-else>点击上传照片</div>\n        <img\n            class=\"smallimage-circle\"\n            src=\"@/assets/buildframe.png\"\n            alt=\"闽南剪纸迁移\"\n        >\n      </div>\n      <div v-if=\"qrCode\" style=\"z-index: 9999\">\n        <img :src=\"qrCode\" style=\"width: 200px;height: 200px;border: 1px #CCCCCC solid;\" alt=\"QR Code\" />\n      </div>\n      <div class=\"allAlothing\">\n        <div v-for=\"(dynasty, index) in dynasties\" :key=\"index\" class=\"dynasty\">\n          <img :src=\"dynasty.clothingSrc\" class=\"dynastyClothing\" :style=\"{ transform: isSelected(index) ? 'scale(1.1)' : 'scale(1)' }\">\n          <img :src=\"dynasty.buttonSrc\" class=\"dynastyButton\" @click=\"selectDynasty(index,dynasty)\">\n        </div>\n      </div>\n    </div>\n    <div class=\"buildImg\">\n      <div class=\"clothingImg-div\" >\n        <!-- <img class=\"bigImg\" :src=valueUrl v-if=\"valueUrl\"> -->\n        <img class=\"clothingImg\" :src=outUrl v-if=\"outUrl\" @click=\"downloadImage\">\n        <img\n            class=\"clothingimage-circle\"\n            src=\"@/assets/buildframe.png\"\n            alt=\"闽南剪纸迁移\"\n        >\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\n\nimport QRCode from \"qrcode\";\n\nlet inputElement = null\nexport default {\n  data() {\n    return {\n      valueUrl: require(\"../assets/example/zhanmin.jpg\"),\n\t\t\toutUrl:require(\"../assets/example/shengExample.jpg\"),\n      isImg: false,  // 控制加载动画显示与隐藏\n      style: \"\",\n      selectedDynasty: null,\n      url: \"\", // 这个是输入框的值\n      qrCode: \"\", // 这个是二维码图片的url\n      dynasties: [\n        // { clothingSrc: require(\"@/assets/clothing/sheng.png\"), buttonSrc: require(\"../assets/clothing/shengb.png\"),dynasties:'sheng' },\n        // { clothingSrc: require(\"@/assets/clothing/dan.png\"), buttonSrc: require(\"@/assets/clothing/danb.png\"),dynasties:'dan' },\n        // { clothingSrc: require(\"@/assets/clothing/jing.png\"), buttonSrc: require(\"@/assets/clothing/jingb.png\"),dynasties:'jing'  },\n        // { clothingSrc: require(\"@/assets/clothing/chou.png\"), buttonSrc: require(\"@/assets/clothing/choub.png\"),dynasties:'chou'  }\n      ]\n    }\n  },\n  methods: {\n    toGetImg() {\n      if (inputElement === null) {\n        // 生成文件上传的控件\n        inputElement = document.createElement('input')\n        inputElement.setAttribute('type', 'file')\n        inputElement.style.display = 'none'\n\n        if (window.addEventListener) {\n          inputElement.addEventListener('change', this.uploadFile, false)\n        } else {\n          inputElement.attachEvent('onchange', this.uploadFile)\n        }\n\n        document.body.appendChild(inputElement)\n      }\n      inputElement.click()\n    },\n    uploadFile(el) {\n      if (el && el.target && el.target.files && el.target.files.length > 0) {\n        const files = el.target.files[0];\n        const isLt2M = files.size / 1024 / 1024 < 2;\n\n        if (!isLt2M) {\n          this.$message.error('上传图片大小不能超过 2MB!');\n        } else if (files.type.indexOf('image') === -1) {\n          this.$message.error('请选择图片文件');\n        } else {\n          const reader = new FileReader();\n          reader.readAsDataURL(files);\n          this.$message({\n\t\t\t\t\t\t\tmessage: '图片上传成功',\n\t\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t\t});\n          reader.onload = () => {\n            this.valueUrl = reader.result;\n          };\n\n        }\n      }\n    },\n    sentImage(){\n      if(this.valueUrl==require(\"../assets/example/zhanmin.jpg\")){\n        this.$message.error('请先上传您自己的图片');\n        return;\n      }\n      if (!this.valueUrl) {\n        this.$message.error('请先上传图片');\n        return;\n      }\n      if(this.style==''){\n        this.$message.error('请先选择朝代');\n      }else{\n          this.$message({\n                message: '图片上传成功,正在生成',\n                type: 'success'\n          });\n         this.outUrl=require(\"../assets/loading.gif\")\n         sentClothImg({\n          image: this.valueUrl.split(',')[1],\n          style: this.style\n        })\n        .then(response => {\n          this.isImg = true\n          const stylizedImage = response.data.stylized_image;\n          this.outUrl = 'data:image/jpeg;base64,' + stylizedImage;\n        })\n        .catch(error => {\n          this.loading = false;\n          console.error('Error uploading image: ', error);\n        });\n      }\n\n\n    },\n    selectDynasty(index,dynasties) {\n      this.selectedDynasty = index;\n      this.style = dynasties.dynasties\n    },\n    isSelected(index) {\n      return this.selectedDynasty === index;\n    },\n    generateQRCode() {\n      // 生成二维码逻辑(参数指定url文字即可)\n      QRCode.toDataURL(this.url)\n          .then(async (qr) => {\n            this.qrCode = qr;\n            // 生成完二维码重新对容器的内容进行图片的生成\n            // 这里会有异步情况,建议等一会\n          })\n          .catch((error) => {\n            console.error(\"生成二维码出错：\", error);\n          });\n    },\n    downloadImage(event) {\n      if (this.outUrl&&this.outUrl!= require(\"../assets/loading.gif\")) {\n        const link = document.createElement('a');\n        link.href = this.outUrl;\n        link.download = 'stylized_image.jpg'; // 设置下载后的文件名\n        document.body.appendChild(link);\n        this.url = link.href;\n        this.generateQRCode();\n        document.body.removeChild(link);\n      } else if(!this.valueUrl){\n        this.$message.error('请先上传图片');\n      }else{\n        this.$message.error('正在加载中');\n      }\n    },\n\n  },\n  beforeDestroy() {\n    if (inputElement) {\n      if (window.addEventListener) {\n        inputElement.removeEventListener('change', this.onGetLocalFile, false)\n      } else {\n        inputElement.detachEvent('onchange', this.onGetLocalFile)\n      }\n      document.body.removeChild(inputElement)\n      inputElement = null\n      console.log('========inputelement destroy')\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n.allAlothing{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.dynasty{\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.dynastyClothing{\n  margin-top: 1.3vh;\n  width: 8.74vw;\n  height: 18.67vh;\n}\n.dynastyButton{\n  margin-top: 1.3vh;\n  width: 8.06vw;\n  height: auto;\n  cursor: pointer;\n}\n.dynastyButton:hover{\n  transform: scale(1.1); /* 放大效果 */\n\n}\n.clothing {\n  overflow: hidden;\n  display:flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n.clothingImg-div {\n  width:  25.5vw;\n  height:  66.67vh;\n  overflow: hidden;\n  cursor: pointer;\n\n}\n.smallImg-div {\n  width:  25.5vw;\n  height:  48.67vh;\n  overflow: hidden;\n  cursor: pointer;\n\n}\n.smallImg {\n  display: block;\n  width: 26.5vw;\n  height: 31vh;\n  margin-left: -8.24vw;\n  margin-top: 24.8vh;\n  z-index: 999;\n  position: absolute;\n  border-radius: 10%;\n}\n.smallimage-circle{\n  width: 25.5vw;\n  height: 48.67vh;\n}\n\n.clothingImg {\n  display: block;\n  width: 19.5vw;\n  height: 49.467vh;\n  margin-left: 4.2vw;\n  margin-top: 8.13vh;\n  z-index: 999;\n  position: absolute;\n  border-radius: 5%;\n}\n#clothing-v {\n  background: url(\"@/assets/background1.jpg\");\n  width: 100%;\n  height: 100%;\n  background-size: 100% 100%;\n}\n.clothingimage-circle{\n  width: 28.5vw;\n  height: 64.67vh;\n}\n.clothingTag{\n  width: 13.4vw;\n  height: 8.13vh;\n  cursor: pointer;\n  margin-right: 0.67vw;\n}\n.clothingTag:hover {\n  transform: scale(1.1); /* 放大效果 */\n}\n.leadImg{\n  display:flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  margin-top: 2.67vh;\n  margin-right: 0;\n}\n.buildImg{\n  display:flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  margin-right: 25.5vw;\n  margin-top: 1.3vh;\n}\n.smallText{\n  display: block;\n  margin-left: 9.14vw;\n  margin-top: 20.8vh;\n  z-index: 999;\n  color: #b1abab;\n  position: absolute;\n}\n\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}