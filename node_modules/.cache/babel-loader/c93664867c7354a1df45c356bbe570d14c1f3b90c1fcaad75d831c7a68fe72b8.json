{"ast":null,"code":"import QRCode from \"qrcode\";\nexport default {\n  data() {\n    return {\n      images: [{\n        src: require(\"@/assets/background.jpg\")\n      }, {\n        src: require(\"@/assets/beijing1.png\")\n      }, {\n        src: require(\"@/assets/beijing1.png\")\n      }, {\n        src: require(\"@/assets/beijing1.png\")\n      }, {\n        src: require(\"@/assets/show.jpg\")\n      }],\n      url: \"https://space.bilibili.com/452543325/upload/video\",\n      // 这个是输入框的值\n      qrCode: \"\",\n      // 这个是二维码图片的url\n      scrollSpeed: 0.5,\n      // 控制滚动的速度\n      scrollPosition1: 0,\n      // 第一组的滚动位置\n      scrollPosition2: 0,\n      // 第二组的滚动位置\n      isHovered: null,\n      // 当前悬停的图片索引\n      hoveredGroup: null // 当前悬停的图片组（1为第一组，2为第二组）\n    };\n  },\n  methods: {\n    generateQRCode(event) {\n      // 生成二维码逻辑\n      QRCode.toDataURL(this.url).then(async qr => {\n        this.qrCode = qr; // 设置二维码图片\n        this.startClearTimer(); // 启动清除二维码定时器\n      }).catch(error => {\n        console.error(\"生成二维码出错：\", error);\n      });\n      event.stopPropagation();\n    },\n    // 启动清除二维码的定时器\n    startClearTimer() {\n      if (this.clearTimer) {\n        clearTimeout(this.clearTimer);\n      }\n      this.clearTimer = setTimeout(() => {\n        this.qrCode = \"\"; // 清除二维码\n      }, 10000);\n    },\n    // 监听页面点击事件\n    handleClick(event) {\n      const qrCodeElement = this.$el.querySelector('.win-erweima');\n      if (qrCodeElement && !qrCodeElement.contains(event.target)) {\n        this.qrCode = \"\"; // 清除二维码\n      }\n      this.startClearTimer(); // 重置计时器\n    },\n    smoothScroll() {\n      const group1 = this.$refs.group1;\n      const group2 = this.$refs.group2;\n      const scrollWidth1 = group1.scrollWidth; // 第一组的总宽度\n      const scrollWidth2 = group2.scrollWidth; // 第二组的总宽度\n\n      const animate = () => {\n        if (this.hoveredGroup === null) {\n          // 第一组图片滚动\n          this.scrollPosition1 -= this.scrollSpeed;\n          if (this.scrollPosition1 <= -scrollWidth1) {\n            this.scrollPosition1 = scrollWidth2; // 第一组滚动完后接到第二组末尾\n          }\n\n          // 第二组图片滚动\n          this.scrollPosition2 -= this.scrollSpeed;\n          if (this.scrollPosition2 <= -scrollWidth2) {\n            this.scrollPosition2 = scrollWidth1; // 第二组滚动完后接到第一组末尾\n          }\n\n          // 更新滚动位置\n          group1.style.transform = `translateX(${this.scrollPosition1}px)`;\n          group2.style.transform = `translateX(${this.scrollPosition2}px)`;\n        }\n\n        // 继续请求下一帧，保持滚动\n        requestAnimationFrame(animate);\n      };\n\n      // 启动动画\n      requestAnimationFrame(animate);\n    },\n    onMouseOver(index, group) {\n      this.isHovered = index; // 设置当前悬停的图片索引\n      this.hoveredGroup = group; // 设置悬停图片所在的组\n    },\n    onMouseOut() {\n      this.isHovered = null; // 重置悬停状态\n      this.hoveredGroup = null;\n    }\n  },\n  mounted() {\n    this.smoothScroll(); // 页面加载时启动滚动\n  }\n};","map":{"version":3,"names":["QRCode","data","images","src","require","url","qrCode","scrollSpeed","scrollPosition1","scrollPosition2","isHovered","hoveredGroup","methods","generateQRCode","event","toDataURL","then","qr","startClearTimer","catch","error","console","stopPropagation","clearTimer","clearTimeout","setTimeout","handleClick","qrCodeElement","$el","querySelector","contains","target","smoothScroll","group1","$refs","group2","scrollWidth1","scrollWidth","scrollWidth2","animate","style","transform","requestAnimationFrame","onMouseOver","index","group","onMouseOut","mounted"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"clothing\" id=\"clothing-v\" @click=\"handleClick\">\n    <div class=\"overlay\" v-if=\"qrCode\"></div>\n    <div v-if=\"qrCode\" class=\"win-erweima\">\n      <img :src=\"qrCode\" style=\"width: 500px;height: 500px;border: 1px #CCCCCC solid;\" alt=\"QR Code\" />\n    </div>\n    <div class=\"win-up\" style=\"z-index: 1\">\n      <div class=\"win-show\">\n        <img class=\"win-photo\" src=\"@/assets/show.jpg\" />\n      </div>\n      <div class=\"all-button\">\n        <img class=\"win-button\" src=\"@/assets/shangchuan.png\" />\n        <img class=\"win-button\" src=\"@/assets/build.png\" />\n        <img class=\"win-button\" src=\"@/assets/erweima.png\" @click=\"generateQRCode\" />\n      </div>\n    </div>\n    <div class=\"win-down\">\n      <div class=\"gundong\">\n        <div class=\"topgun\">\n          <div ref=\"scrollContainer\" class=\"scroll-container\">\n            <!-- 第一组图片 -->\n            <div class=\"group\" ref=\"group1\">\n              <div\n                  class=\"smallbox\"\n                  v-for=\"(item, index) in images\"\n                  :key=\"'group1-' + index\"\n                  @mouseover=\"onMouseOver(index, 1)\"\n                  @mouseout=\"onMouseOut\"\n                  :class=\"{ highlighted: isHovered === index && hoveredGroup === 1 }\"\n              >\n                <img :src=\"item.src\" class=\"slide-image\" />\n              </div>\n            </div>\n            <!-- 第二组图片 -->\n            <div class=\"group\" ref=\"group2\">\n              <div\n                  class=\"smallbox\"\n                  v-for=\"(item, index) in images\"\n                  :key=\"'group2-' + index\"\n                  @mouseover=\"onMouseOver(index, 2)\"\n                  @mouseout=\"onMouseOut\"\n                  :class=\"{ highlighted: isHovered === index && hoveredGroup === 2 }\"\n              >\n                <img :src=\"item.src\" class=\"slide-image\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport QRCode from \"qrcode\";\n\nexport default {\n  data() {\n    return {\n      images: [\n        { src: require(\"@/assets/background.jpg\") },\n        { src: require(\"@/assets/beijing1.png\") },\n        { src: require(\"@/assets/beijing1.png\") },\n        { src: require(\"@/assets/beijing1.png\") },\n        { src: require(\"@/assets/show.jpg\") },\n      ],\n      url: \"https://space.bilibili.com/452543325/upload/video\", // 这个是输入框的值\n      qrCode: \"\", // 这个是二维码图片的url\n      scrollSpeed: 0.5, // 控制滚动的速度\n      scrollPosition1: 0, // 第一组的滚动位置\n      scrollPosition2: 0, // 第二组的滚动位置\n      isHovered: null, // 当前悬停的图片索引\n      hoveredGroup: null, // 当前悬停的图片组（1为第一组，2为第二组）\n    };\n  },\n  methods: {\n    generateQRCode(event) {\n      // 生成二维码逻辑\n      QRCode.toDataURL(this.url)\n          .then(async (qr) => {\n            this.qrCode = qr; // 设置二维码图片\n            this.startClearTimer(); // 启动清除二维码定时器\n          })\n          .catch((error) => {\n            console.error(\"生成二维码出错：\", error);\n          });\n      event.stopPropagation();\n    },\n\n    // 启动清除二维码的定时器\n    startClearTimer() {\n      if (this.clearTimer) {\n        clearTimeout(this.clearTimer);\n      }\n      this.clearTimer = setTimeout(() => {\n        this.qrCode = \"\"; // 清除二维码\n      }, 10000);\n    },\n\n    // 监听页面点击事件\n    handleClick(event) {\n      const qrCodeElement = this.$el.querySelector('.win-erweima');\n      if (qrCodeElement && !qrCodeElement.contains(event.target)) {\n        this.qrCode = \"\"; // 清除二维码\n      }\n      this.startClearTimer(); // 重置计时器\n    },\n\n    smoothScroll() {\n      const group1 = this.$refs.group1;\n      const group2 = this.$refs.group2;\n      const scrollWidth1 = group1.scrollWidth; // 第一组的总宽度\n      const scrollWidth2 = group2.scrollWidth; // 第二组的总宽度\n\n      const animate = () => {\n        if (this.hoveredGroup === null) {\n          // 第一组图片滚动\n          this.scrollPosition1 -= this.scrollSpeed;\n          if (this.scrollPosition1 <= -scrollWidth1) {\n            this.scrollPosition1 = scrollWidth2; // 第一组滚动完后接到第二组末尾\n          }\n\n          // 第二组图片滚动\n          this.scrollPosition2 -= this.scrollSpeed;\n          if (this.scrollPosition2 <= -scrollWidth2) {\n            this.scrollPosition2 = scrollWidth1; // 第二组滚动完后接到第一组末尾\n          }\n\n          // 更新滚动位置\n          group1.style.transform = `translateX(${this.scrollPosition1}px)`;\n          group2.style.transform = `translateX(${this.scrollPosition2}px)`;\n        }\n\n        // 继续请求下一帧，保持滚动\n        requestAnimationFrame(animate);\n      };\n\n      // 启动动画\n      requestAnimationFrame(animate);\n    },\n\n    onMouseOver(index, group) {\n      this.isHovered = index; // 设置当前悬停的图片索引\n      this.hoveredGroup = group; // 设置悬停图片所在的组\n    },\n\n    onMouseOut() {\n      this.isHovered = null; // 重置悬停状态\n      this.hoveredGroup = null;\n    },\n  },\n\n  mounted() {\n    this.smoothScroll(); // 页面加载时启动滚动\n  },\n};\n</script>\n\n\n<style scoped>\n.clothing {\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n#clothing-v {\n  background: url(\"@/assets/background.jpg\");\n  width: 100%;\n  height: 100%;\n  background-size: 100% 100%;\n}\n\n.win-up {\n  width: 100%;\n  height: 55%;\n  margin-top: 9%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.win-down {\n  margin-top: 1.5%;\n  margin-left: 1%;\n  width: 76%;\n  height: 25%;\n  margin-bottom: 0.5%;\n  background-color: white;\n  border-radius: 1vw;\n}\n\n.win-button {\n  width: 200px;\n  height: 80px;\n  cursor: pointer;\n}\n\n.win-show {\n  width: 80%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.all-button {\n  width: 20%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-end;\n}\n\n.win-photo {\n  width: 46.4vw;\n  height: 54.37vh;\n}\n\n.win-erweima {\n  position: absolute;\n  top: 50vh;\n  left: 50%;\n  width: 500px;\n  height: 500px;\n  transform: translate(-50%, -50%);\n  z-index: 9999;\n}\n\n.overlay {\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 10;\n}\n\n.gundong {\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.topgun {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  overflow: hidden;\n}\n\n.scroll-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  transition: transform 0.2s ease-out;\n}\n\n.smallbox {\n  margin-left: 1vh;\n  width: 28%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 0 0 auto;\n}\n\nimg.slide-image {\n  border: 0.2vw solid transparent;\n  width: 100%;\n  height: 80%;\n}\n\n.highlighted img {\n  border: 0.2vw solid #ff6f00;\n  cursor: pointer;\n  transform: scale(1.02); /* 放大图片 */\n}\n</style>\n"],"mappings":"AAsDA,OAAAA,MAAA;AAEA;EACAC,KAAA;IACA;MACAC,MAAA,GACA;QAAAC,GAAA,EAAAC,OAAA;MAAA,GACA;QAAAD,GAAA,EAAAC,OAAA;MAAA,GACA;QAAAD,GAAA,EAAAC,OAAA;MAAA,GACA;QAAAD,GAAA,EAAAC,OAAA;MAAA,GACA;QAAAD,GAAA,EAAAC,OAAA;MAAA,EACA;MACAC,GAAA;MAAA;MACAC,MAAA;MAAA;MACAC,WAAA;MAAA;MACAC,eAAA;MAAA;MACAC,eAAA;MAAA;MACAC,SAAA;MAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAAC,KAAA;MACA;MACAd,MAAA,CAAAe,SAAA,MAAAV,GAAA,EACAW,IAAA,OAAAC,EAAA;QACA,KAAAX,MAAA,GAAAW,EAAA;QACA,KAAAC,eAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,aAAAA,KAAA;MACA;MACAN,KAAA,CAAAQ,eAAA;IACA;IAEA;IACAJ,gBAAA;MACA,SAAAK,UAAA;QACAC,YAAA,MAAAD,UAAA;MACA;MACA,KAAAA,UAAA,GAAAE,UAAA;QACA,KAAAnB,MAAA;MACA;IACA;IAEA;IACAoB,YAAAZ,KAAA;MACA,MAAAa,aAAA,QAAAC,GAAA,CAAAC,aAAA;MACA,IAAAF,aAAA,KAAAA,aAAA,CAAAG,QAAA,CAAAhB,KAAA,CAAAiB,MAAA;QACA,KAAAzB,MAAA;MACA;MACA,KAAAY,eAAA;IACA;IAEAc,aAAA;MACA,MAAAC,MAAA,QAAAC,KAAA,CAAAD,MAAA;MACA,MAAAE,MAAA,QAAAD,KAAA,CAAAC,MAAA;MACA,MAAAC,YAAA,GAAAH,MAAA,CAAAI,WAAA;MACA,MAAAC,YAAA,GAAAH,MAAA,CAAAE,WAAA;;MAEA,MAAAE,OAAA,GAAAA,CAAA;QACA,SAAA5B,YAAA;UACA;UACA,KAAAH,eAAA,SAAAD,WAAA;UACA,SAAAC,eAAA,KAAA4B,YAAA;YACA,KAAA5B,eAAA,GAAA8B,YAAA;UACA;;UAEA;UACA,KAAA7B,eAAA,SAAAF,WAAA;UACA,SAAAE,eAAA,KAAA6B,YAAA;YACA,KAAA7B,eAAA,GAAA2B,YAAA;UACA;;UAEA;UACAH,MAAA,CAAAO,KAAA,CAAAC,SAAA,sBAAAjC,eAAA;UACA2B,MAAA,CAAAK,KAAA,CAAAC,SAAA,sBAAAhC,eAAA;QACA;;QAEA;QACAiC,qBAAA,CAAAH,OAAA;MACA;;MAEA;MACAG,qBAAA,CAAAH,OAAA;IACA;IAEAI,YAAAC,KAAA,EAAAC,KAAA;MACA,KAAAnC,SAAA,GAAAkC,KAAA;MACA,KAAAjC,YAAA,GAAAkC,KAAA;IACA;IAEAC,WAAA;MACA,KAAApC,SAAA;MACA,KAAAC,YAAA;IACA;EACA;EAEAoC,QAAA;IACA,KAAAf,YAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}