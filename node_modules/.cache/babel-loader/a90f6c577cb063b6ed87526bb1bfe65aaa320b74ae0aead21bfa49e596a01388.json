{"ast":null,"code":"export default {\n  data() {\n    return {\n      mediaStreamTrack: {},\n      video_stream: '',\n      // 视频stream\n      imgSrc: '',\n      // 拍照图片\n      canvas: null,\n      context: null\n    };\n  },\n  mounted() {\n    // 进入页面 自动调用摄像头\n    this.getCamera();\n  },\n  methods: {\n    // 调用打开摄像头功能\n    getCamera() {\n      // 获取 canvas 画布\n      this.canvas = document.getElementById('canvasCamera');\n      this.context = this.canvas.getContext('2d');\n      // 旧版本浏览器可能根本不支持mediaDevices，我们首先设置一个空对象\n      if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n      }\n      // 正常支持版本\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        // 摄像头开启成功\n        this.mediaStreamTrack = typeof stream.stop === 'function' ? stream : stream.getTracks()[0];\n        this.video_stream = stream;\n        this.$refs.video.srcObject = stream;\n        this.$refs.video.play();\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // 拍照 绘制图片\n    setImage() {\n      console.log('拍照');\n      // 点击canvas画图\n      this.context.drawImage(this.$refs.video, 0, 0, 200, 100);\n      // 获取图片base64链接\n      const image = this.canvas.toDataURL('image/png');\n      this.imgSrc = image;\n      this.$emit('refreshDataList', this.imgSrc);\n    },\n    // 打开摄像头\n    OpenCamera() {\n      console.log('打开摄像头');\n      this.getCamera();\n    },\n    // 关闭摄像头\n    CloseCamera() {\n      console.log('关闭摄像头');\n      this.$refs.video.srcObject.getTracks()[0].stop();\n    }\n  }\n};","map":{"version":3,"names":["data","mediaStreamTrack","video_stream","imgSrc","canvas","context","mounted","getCamera","methods","document","getElementById","getContext","navigator","mediaDevices","undefined","getUserMedia","video","then","stream","stop","getTracks","$refs","srcObject","play","catch","err","console","log","setImage","drawImage","image","toDataURL","$emit","OpenCamera","CloseCamera"],"sources":["src/views/lunbotu.vue"],"sourcesContent":["<template>\r\n  <div class=\"publish\">\r\n    <video ref=\"video\" ></video>\r\n    <canvas style=\"display: none\" id=\"canvasCamera\"></canvas>\r\n    <div v-if=\"imgSrc\" class=\"img_bg_camera\">\r\n      <img :src=\"imgSrc\" class=\"tx_img\" />\r\n    </div>\r\n    <button @click=\"OpenCamera\">打开摄像头</button>\r\n    <button @click=\"CloseCamera\">关闭摄像头</button>\r\n    <button @click=\"setImage\">拍照</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      mediaStreamTrack: {},\r\n      video_stream: '', // 视频stream\r\n      imgSrc: '', // 拍照图片\r\n      canvas: null,\r\n      context: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    // 进入页面 自动调用摄像头\r\n    this.getCamera();\r\n  },\r\n  methods: {\r\n    // 调用打开摄像头功能\r\n    getCamera() {\r\n      // 获取 canvas 画布\r\n      this.canvas = document.getElementById('canvasCamera');\r\n      this.context = this.canvas.getContext('2d');\r\n      // 旧版本浏览器可能根本不支持mediaDevices，我们首先设置一个空对象\r\n      if (navigator.mediaDevices === undefined) {\r\n        navigator.mediaDevices = {};\r\n      }\r\n      // 正常支持版本\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: true,\r\n        })\r\n          .then((stream) => {\r\n          // 摄像头开启成功\r\n          this.mediaStreamTrack = typeof stream.stop === 'function' ? stream : stream.getTracks()[0];\r\n          this.video_stream = stream;\r\n          this.$refs.video.srcObject = stream;\r\n          this.$refs.video.play();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    // 拍照 绘制图片\r\n    setImage() {\r\n      console.log('拍照');\r\n      // 点击canvas画图\r\n      this.context.drawImage(\r\n        this.$refs.video,\r\n        0,\r\n        0,\r\n        200,\r\n        100,\r\n      );\r\n      // 获取图片base64链接\r\n      const image = this.canvas.toDataURL('image/png');\r\n      this.imgSrc = image;\r\n      this.$emit('refreshDataList', this.imgSrc);\r\n    },\r\n    // 打开摄像头\r\n    OpenCamera() {\r\n      console.log('打开摄像头');\r\n      this.getCamera();\r\n    },\r\n    // 关闭摄像头\r\n    CloseCamera() {\r\n      console.log('关闭摄像头');\r\n      this.$refs.video.srcObject.getTracks()[0].stop();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nvideo {\r\n  width: 100%;\r\n  height: 300px;\r\n}\r\ncanvas {\r\n  width: 100%;\r\n  height: 300px;\r\n}\r\nbutton {\r\n  width: 100px;\r\n  height: 40px;\r\n  position: relative;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: rgb(22, 204, 195);\r\n}\r\n.img_bg_camera {\r\n  img {\r\n    width: 300px;\r\n    height: 200px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAcA;EACAA,KAAA;IACA;MACAC,gBAAA;MACAC,YAAA;MAAA;MACAC,MAAA;MAAA;MACAC,MAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA;IACAD,UAAA;MACA;MACA,KAAAH,MAAA,GAAAK,QAAA,CAAAC,cAAA;MACA,KAAAL,OAAA,QAAAD,MAAA,CAAAO,UAAA;MACA;MACA,IAAAC,SAAA,CAAAC,YAAA,KAAAC,SAAA;QACAF,SAAA,CAAAC,YAAA;MACA;MACA;MACAD,SAAA,CAAAC,YAAA,CACAE,YAAA;QACAC,KAAA;MACA,GACAC,IAAA,CAAAC,MAAA;QACA;QACA,KAAAjB,gBAAA,UAAAiB,MAAA,CAAAC,IAAA,kBAAAD,MAAA,GAAAA,MAAA,CAAAE,SAAA;QACA,KAAAlB,YAAA,GAAAgB,MAAA;QACA,KAAAG,KAAA,CAAAL,KAAA,CAAAM,SAAA,GAAAJ,MAAA;QACA,KAAAG,KAAA,CAAAL,KAAA,CAAAO,IAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA;IACA;IACA;IACAG,SAAA;MACAF,OAAA,CAAAC,GAAA;MACA;MACA,KAAAtB,OAAA,CAAAwB,SAAA,CACA,KAAAR,KAAA,CAAAL,KAAA,EACA,GACA,GACA,KACA,GACA;MACA;MACA,MAAAc,KAAA,QAAA1B,MAAA,CAAA2B,SAAA;MACA,KAAA5B,MAAA,GAAA2B,KAAA;MACA,KAAAE,KAAA,yBAAA7B,MAAA;IACA;IACA;IACA8B,WAAA;MACAP,OAAA,CAAAC,GAAA;MACA,KAAApB,SAAA;IACA;IACA;IACA2B,YAAA;MACAR,OAAA,CAAAC,GAAA;MACA,KAAAN,KAAA,CAAAL,KAAA,CAAAM,SAAA,CAAAF,SAAA,MAAAD,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}