{"ast":null,"code":"import QrCode from 'qrcode';\nexport default {\n  data() {\n    return {\n      showCodeDialog: false,\n      imgUrl: '' // 图片地址\n    };\n  },\n  methods: {\n    showQrCode(url) {\n      // url存在的情况下才弹出层\n      if (url) {\n        this.showCodeDialog = true;\n        // 确保页面已经渲染完毕\n        this.$nextTick(() => {\n          // 将地址转化成二维码\n          QrCode.toCanvas(this.$refs.myCanvas, url, error => {\n            if (error) {\n              console.error(error);\n            }\n          });\n        });\n      } else {\n        this.$message.warning('图片地址为空');\n      }\n    }\n  }\n};","map":{"version":3,"names":["QrCode","data","showCodeDialog","imgUrl","methods","showQrCode","url","$nextTick","toCanvas","$refs","myCanvas","error","console","$message","warning"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <el-dialog title=\"二维码\" :visible.sync=\"showCodeDialog\" @opened=\"showQrCode\" @close=\"imgUrl=''\">\n    <el-row type=\"flex\" justify=\"center\">\n      <canvas ref=\"myCanvas\" />\n    </el-row>\n  </el-dialog>\n</template>\n\n<script>\nimport QrCode from 'qrcode';\n\nexport default {\n  data() {\n    return {\n      showCodeDialog: false,\n      imgUrl: '', // 图片地址\n    };\n  },\n  methods: {\n    showQrCode(url) {\n      // url存在的情况下才弹出层\n      if (url) {\n        this.showCodeDialog = true;\n        // 确保页面已经渲染完毕\n        this.$nextTick(() => {\n          // 将地址转化成二维码\n          QrCode.toCanvas(this.$refs.myCanvas, url, (error) => {\n            if (error) {\n              console.error(error);\n            }\n          });\n        });\n      } else {\n        this.$message.warning('图片地址为空');\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AASA,OAAAA,MAAA;AAEA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,GAAA;MACA;MACA,IAAAA,GAAA;QACA,KAAAJ,cAAA;QACA;QACA,KAAAK,SAAA;UACA;UACAP,MAAA,CAAAQ,QAAA,MAAAC,KAAA,CAAAC,QAAA,EAAAJ,GAAA,EAAAK,KAAA;YACA,IAAAA,KAAA;cACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;YACA;UACA;QACA;MACA;QACA,KAAAE,QAAA,CAAAC,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}