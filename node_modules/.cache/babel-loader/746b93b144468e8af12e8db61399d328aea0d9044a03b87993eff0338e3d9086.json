{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport QRCode from \"qrcode\";\nimport { sentClothImg } from \"../api/index\";\nlet inputElement = null;\nexport default {\n  data() {\n    return {\n      girlimages: [{\n        src: require(\"@/assets/girl/girl1.png\")\n      }, {\n        src: require(\"@/assets/girl/girl2.png\")\n      }, {\n        src: require(\"@/assets/girl/girl3.png\")\n      }, {\n        src: require(\"@/assets/girl/girl4.png\")\n      }],\n      boyimages: [{\n        src: require(\"@/assets/boy/boy1.jpg\")\n      }, {\n        src: require(\"@/assets/boy/boy2.jpg\")\n      }, {\n        src: require(\"@/assets/boy/boy3.jpg\")\n      }],\n      images: [],\n      sex: 'girl',\n      qrCode: \"\",\n      // 这个是二维码图片的url\n      scrollSpeed: 0.5,\n      // 控制滚动的速度\n      scrollPosition: 0,\n      // 当前滚动位置\n      selectStyle: null,\n      // 当前选择的图片索引\n      clearTimer: null,\n      // 用来存储清除二维码的定时器\n      outUrl: require(\"@/assets/show.jpg\"),\n      valueUrl: '',\n      isImg: false,\n      // 控制加载动画显示与隐藏\n      style: \"\",\n      mediaStreamTrack: {},\n      video_stream: '',\n      // 视频stream\n      imgSrc: '',\n      // 拍照图片\n      canvas: null,\n      context: null\n    };\n  },\n  mounted() {\n    this.setImages();\n  },\n  methods: {\n    setImages() {\n      // 根据 sex 设置 images 的值\n      if (this.sex === 'girl') {\n        this.images = this.girlimages;\n      } else if (this.sex === 'boy') {\n        this.images = this.boyimages;\n      }\n    },\n    generateQRCode(event) {\n      const link = document.createElement('a');\n      link.href = this.outUrl;\n      // 生成二维码逻辑(参数指定url文字即可)\n      QRCode.toDataURL(link.href).then(async qr => {\n        this.qrCode = qr; // 设置二维码图片\n\n        // 每次生成二维码时，启动一个新的计时器，5秒后清除二维码\n        this.startClearTimer();\n      }).catch(error => {\n        console.error(\"生成二维码出错：\", error);\n      });\n      // 阻止点击二维码按钮时事件传播，防止触发页面上的点击事件\n      event.stopPropagation();\n    },\n    // 启动清除二维码的定时器\n    startClearTimer() {\n      // 如果已有定时器，清除它\n      if (this.clearTimer) {\n        clearTimeout(this.clearTimer);\n      }\n\n      // 设置一个 5 秒后清除二维码的定时器\n      this.clearTimer = setTimeout(() => {\n        this.qrCode = \"\"; // 清除二维码\n      }, 10000); // 5秒后清除二维码\n    },\n    // 监听页面点击事件，点击时重置定时器\n    handleClick(event) {\n      // 判断点击的区域是否是二维码区域，如果是就不清除二维码，否则清除\n      const qrCodeElement = this.$el.querySelector('.win-erweima');\n\n      // 判断点击是否在二维码外\n      if (qrCodeElement && !qrCodeElement.contains(event.target)) {\n        this.qrCode = \"\"; // 清除二维码\n      }\n\n      // 每次点击时，重置计时器，防止自动清除二维码\n      this.startClearTimer();\n    },\n    nextImage() {\n      const scrollContainer = this.$refs.scrollContainer;\n      const imageWidth = scrollContainer.children[0].offsetWidth; // 获取单张图片的宽度\n\n      // 将第一张图片移到最后\n      const lastImage = this.images.pop();\n      this.images.unshift(lastImage);\n\n      // 判断是否超出范围，调整位置\n      if (this.scrollPosition <= -imageWidth * this.images.length) {\n        this.scrollPosition = 0; // 如果滚动超出范围，重置滚动位置\n      }\n    },\n    // 向左滚动（点击 preImg）\n    prevImage() {\n      const scrollContainer = this.$refs.scrollContainer;\n      const imageWidth = scrollContainer.children[0].offsetWidth; // 获取单张图片的宽度\n\n      // 将最后一张图片移到最前面\n      const firstImage = this.images.shift();\n      this.images.push(firstImage);\n\n      // 判断是否超出范围，调整位置\n      if (this.scrollPosition >= 0) {\n        this.scrollPosition = -imageWidth * (this.images.length - 1); // 如果回到第一张，设置为最后一张\n      }\n    },\n    toGetImg() {\n      if (inputElement === null) {\n        // 生成文件上传的控件\n        inputElement = document.createElement('input');\n        inputElement.setAttribute('type', 'file');\n        inputElement.style.display = 'none';\n        if (window.addEventListener) {\n          inputElement.addEventListener('change', this.uploadFile, false);\n        } else {\n          inputElement.attachEvent('onchange', this.uploadFile);\n        }\n        document.body.appendChild(inputElement);\n      }\n      inputElement.click();\n    },\n    uploadFile(el) {\n      if (el && el.target && el.target.files && el.target.files.length > 0) {\n        const files = el.target.files[0];\n        const isLt2M = files.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n          this.$message.error('上传图片大小不能超过 2MB!');\n        } else if (files.type.indexOf('image') === -1) {\n          this.$message.error('请选择图片文件');\n        } else {\n          const reader = new FileReader();\n          reader.readAsDataURL(files);\n          reader.onload = () => {\n            this.valueUrl = reader.result;\n          };\n        }\n      }\n    },\n    sentImage() {\n      if (!this.valueUrl) {\n        this.$message.error('请先上传图片');\n        return;\n      }\n      if (this.style == '') {\n        this.$message.error('请先选择背景');\n      } else {\n        sentClothImg({\n          image: this.valueUrl.split(',')[1],\n          style: this.style.split(',')[1],\n          headers: {\n            'Content-Type': 'application/json' // 指定请求的内容类型\n          }\n        }).then(response => {\n          this.isImg = true;\n          const stylizedImage = response.data.stylized_image;\n          con;\n          this.outUrl = 'data:image/jpeg;base64,' + stylizedImage;\n        }).catch(error => {\n          this.loading = false;\n          console.error('Error uploading image: ', error);\n        });\n      }\n    },\n    getCamera() {\n      // 获取 canvas 画布\n      this.canvas = document.getElementById('canvasCamera');\n      this.context = this.canvas.getContext('2d');\n      // 旧版本浏览器可能根本不支持mediaDevices，我们首先设置一个空对象\n      if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n      }\n      // 正常支持版本\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        // 摄像头开启成功\n        this.mediaStreamTrack = typeof stream.stop === 'function' ? stream : stream.getTracks()[0];\n        this.video_stream = stream;\n        this.$refs.video.srcObject = stream;\n        this.$refs.video.play();\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // 拍照 绘制图片\n    setImage() {\n      console.log('拍照');\n      // 点击canvas画图\n      this.context.drawImage(this.$refs.video, 0, 0, 200, 100);\n      // 获取图片base64链接\n      const image = this.canvas.toDataURL('image/png');\n      const styles = this.canvas.toDataURL('@/assets/girl/girl4.png');\n      this.imgSrc = image;\n      this.valueUrl = this.imgSrc;\n      this.style = styles;\n      console.log(this.style);\n      this.$emit('refreshDataList', this.imgSrc);\n      this.sentImage();\n      this.canvas = null;\n    },\n    // 打开摄像头\n    OpenCamera() {\n      console.log('打开摄像头');\n      this.getCamera();\n    },\n    // 关闭摄像头\n    CloseCamera() {\n      console.log('关闭摄像头');\n      this.$refs.video.srcObject.getTracks()[0].stop();\n    }\n  }\n};","map":{"version":3,"names":["QRCode","sentClothImg","inputElement","data","girlimages","src","require","boyimages","images","sex","qrCode","scrollSpeed","scrollPosition","selectStyle","clearTimer","outUrl","valueUrl","isImg","style","mediaStreamTrack","video_stream","imgSrc","canvas","context","mounted","setImages","methods","generateQRCode","event","link","document","createElement","href","toDataURL","then","qr","startClearTimer","catch","error","console","stopPropagation","clearTimeout","setTimeout","handleClick","qrCodeElement","$el","querySelector","contains","target","nextImage","scrollContainer","$refs","imageWidth","children","offsetWidth","lastImage","pop","unshift","length","prevImage","firstImage","shift","push","toGetImg","setAttribute","display","window","addEventListener","uploadFile","attachEvent","body","appendChild","click","el","files","isLt2M","size","$message","type","indexOf","reader","FileReader","readAsDataURL","onload","result","sentImage","image","split","headers","response","stylizedImage","stylized_image","con","loading","getCamera","getElementById","getContext","navigator","mediaDevices","undefined","getUserMedia","video","stream","stop","getTracks","srcObject","play","err","log","setImage","drawImage","styles","$emit","OpenCamera","CloseCamera"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"clothing\" id=\"clothing-v\" @click=\"handleClick\">\n    <canvas style=\"display: none\" id=\"canvasCamera\"></canvas>\n    <div class=\"overlay\" v-if=\"qrCode\"></div>\n    <div v-if=\"qrCode\" class=\"win-erweima\">\n      <img :src=\"qrCode\" style=\"width: 100%;height: 100%;border: 1px #CCCCCC solid;\" alt=\"QR Code\" />\n    </div>\n    <div class=\"win-up\" style=\"z-index: 1\">\n      <div class=\"win-show\">\n        <img\n            v-if=\"!canvas\"\n            class=\"win-photo\"\n            :src=outUrl\n        >\n        <video ref=\"video\" v-if=\"canvas\"></video>\n      </div>\n      <div class=\"all-button\">\n        <img\n            class=\"win-button\"\n            src=\"@/assets/shangchuan.png\"\n            @click=\"OpenCamera\"\n        ><img\n          class=\"win-button\"\n          src=\"@/assets/build.png\"\n          @click=\"setImage\"\n      ><img\n          class=\"win-button\"\n          src=\"@/assets/erweima.png\"\n          @click=\"generateQRCode\"\n      >\n      </div>\n    </div>\n    <div class=\"win-down\">\n      <img\n          src=\"@/assets/preImg.png\"\n          class=\"control-img pre-img\"\n          @click=\"prevImage\">\n\n      <img\n          src=\"@/assets/nexImg.png\"\n          class=\"control-img nex-img\"\n          @click=\"nextImage\">\n      <div class=\"gundong\">\n        <div class=\"topgun\">\n          <div ref=\"scrollContainer\" class=\"scroll-container\">\n            <!-- 初始图片 -->\n            <div\n                v-if=\"sex='girl'\"\n                class=\"smallbox\"\n                v-for=\"(item, index) in images\"\n                :key=\"index\"\n            >\n              <img :src=\"item.src\" class=\"slide-image\"  />\n            </div>\n            <div\n                v-if=\"sex='boy'\"\n                class=\"smallbox\"\n                v-for=\"(item, index) in images\"\n                :key=\"index\"\n            >\n              <img :src=\"item.src\" class=\"slide-image\" />\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n</template>\n\n<script>\nimport QRCode from \"qrcode\";\nimport {sentClothImg} from \"../api/index\";\n\nlet inputElement = null;\nexport default {\n  data() {\n    return {\n      girlimages: [\n        { src: require(\"@/assets/girl/girl1.png\") },\n        { src: require(\"@/assets/girl/girl2.png\") },\n        { src: require(\"@/assets/girl/girl3.png\") },\n        { src: require(\"@/assets/girl/girl4.png\") },\n      ],\n      boyimages: [\n        { src: require(\"@/assets/boy/boy1.jpg\") },\n        { src: require(\"@/assets/boy/boy2.jpg\") },\n        { src: require(\"@/assets/boy/boy3.jpg\") },\n      ],\n      images:[],\n      sex:'girl',\n      qrCode: \"\", // 这个是二维码图片的url\n      scrollSpeed: 0.5, // 控制滚动的速度\n      scrollPosition: 0, // 当前滚动位置\n      selectStyle: null, // 当前选择的图片索引\n      clearTimer: null, // 用来存储清除二维码的定时器\n      outUrl:require(\"@/assets/show.jpg\"),\n      valueUrl:'',\n      isImg: false,  // 控制加载动画显示与隐藏\n      style: \"\",\n      mediaStreamTrack: {},\n      video_stream: '', // 视频stream\n      imgSrc: '', // 拍照图片\n      canvas: null,\n      context: null,\n    };\n  },\n  mounted() {\n    this.setImages();\n  },\n  methods: {\n    setImages() {\n      // 根据 sex 设置 images 的值\n      if (this.sex === 'girl') {\n        this.images = this.girlimages;\n      } else if (this.sex === 'boy') {\n        this.images = this.boyimages;\n      }\n    },\n    generateQRCode(event) {\n      const link = document.createElement('a');\n      link.href = this.outUrl;\n      // 生成二维码逻辑(参数指定url文字即可)\n      QRCode.toDataURL(link.href)\n          .then(async (qr) => {\n            this.qrCode = qr; // 设置二维码图片\n\n            // 每次生成二维码时，启动一个新的计时器，5秒后清除二维码\n            this.startClearTimer();\n          })\n          .catch((error) => {\n            console.error(\"生成二维码出错：\", error);\n          });\n      // 阻止点击二维码按钮时事件传播，防止触发页面上的点击事件\n      event.stopPropagation();\n    },\n\n    // 启动清除二维码的定时器\n    startClearTimer() {\n      // 如果已有定时器，清除它\n      if (this.clearTimer) {\n        clearTimeout(this.clearTimer);\n      }\n\n      // 设置一个 5 秒后清除二维码的定时器\n      this.clearTimer = setTimeout(() => {\n        this.qrCode = \"\"; // 清除二维码\n      }, 10000); // 5秒后清除二维码\n    },\n\n    // 监听页面点击事件，点击时重置定时器\n    handleClick(event) {\n      // 判断点击的区域是否是二维码区域，如果是就不清除二维码，否则清除\n      const qrCodeElement = this.$el.querySelector('.win-erweima');\n\n      // 判断点击是否在二维码外\n      if (qrCodeElement && !qrCodeElement.contains(event.target)) {\n        this.qrCode = \"\"; // 清除二维码\n      }\n\n      // 每次点击时，重置计时器，防止自动清除二维码\n      this.startClearTimer();\n    },\n\n    nextImage() {\n      const scrollContainer = this.$refs.scrollContainer;\n      const imageWidth = scrollContainer.children[0].offsetWidth; // 获取单张图片的宽度\n\n      // 将第一张图片移到最后\n      const lastImage = this.images.pop();\n      this.images.unshift(lastImage);\n\n      // 判断是否超出范围，调整位置\n      if (this.scrollPosition <= -imageWidth * this.images.length) {\n        this.scrollPosition = 0; // 如果滚动超出范围，重置滚动位置\n      }\n    },\n\n    // 向左滚动（点击 preImg）\n    prevImage() {\n      const scrollContainer = this.$refs.scrollContainer;\n      const imageWidth = scrollContainer.children[0].offsetWidth; // 获取单张图片的宽度\n\n      // 将最后一张图片移到最前面\n      const firstImage = this.images.shift();\n      this.images.push(firstImage);\n\n\n      // 判断是否超出范围，调整位置\n      if (this.scrollPosition >= 0) {\n        this.scrollPosition = -imageWidth * (this.images.length - 1); // 如果回到第一张，设置为最后一张\n      }\n    },\n    toGetImg() {\n      if (inputElement === null) {\n        // 生成文件上传的控件\n        inputElement = document.createElement('input')\n        inputElement.setAttribute('type', 'file')\n        inputElement.style.display = 'none'\n\n        if (window.addEventListener) {\n          inputElement.addEventListener('change', this.uploadFile, false)\n        } else {\n          inputElement.attachEvent('onchange', this.uploadFile)\n        }\n\n        document.body.appendChild(inputElement)\n      }\n      inputElement.click()\n    },\n    uploadFile(el) {\n      if (el && el.target && el.target.files && el.target.files.length > 0) {\n        const files = el.target.files[0];\n        const isLt2M = files.size / 1024 / 1024 < 2;\n\n        if (!isLt2M) {\n          this.$message.error('上传图片大小不能超过 2MB!');\n        } else if (files.type.indexOf('image') === -1) {\n          this.$message.error('请选择图片文件');\n        } else {\n          const reader = new FileReader();\n          reader.readAsDataURL(files);\n          reader.onload = () => {\n            this.valueUrl = reader.result;\n\n          };\n        }\n      }\n    },\n    sentImage(){\n      if (!this.valueUrl) {\n        this.$message.error('请先上传图片');\n        return;\n      }\n      if(this.style==''){\n        this.$message.error('请先选择背景');\n      }else{\n        sentClothImg({\n          image: this.valueUrl.split(',')[1],\n          style: this.style.split(',')[1],\n          headers: {\n      'Content-Type': 'application/json' // 指定请求的内容类型\n    }\n        })\n            .then(response => {\n              this.isImg = true\n              const stylizedImage = response.data.stylized_image;\n              con\n              this.outUrl = 'data:image/jpeg;base64,' + stylizedImage;\n            })\n            .catch(error => {\n              this.loading = false;\n              console.error('Error uploading image: ', error);\n            });\n      }\n    },\n    getCamera() {\n      // 获取 canvas 画布\n      this.canvas = document.getElementById('canvasCamera');\n      this.context = this.canvas.getContext('2d');\n      // 旧版本浏览器可能根本不支持mediaDevices，我们首先设置一个空对象\n      if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n      }\n      // 正常支持版本\n      navigator.mediaDevices\n        .getUserMedia({\n          video: true,\n        })\n          .then((stream) => {\n          // 摄像头开启成功\n          this.mediaStreamTrack = typeof stream.stop === 'function' ? stream : stream.getTracks()[0];\n          this.video_stream = stream;\n          this.$refs.video.srcObject = stream;\n          this.$refs.video.play();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    // 拍照 绘制图片\n    setImage() {\n      console.log('拍照');\n      // 点击canvas画图\n      this.context.drawImage(\n        this.$refs.video,\n        0,\n        0,\n        200,\n        100,\n      );\n      // 获取图片base64链接\n      const image = this.canvas.toDataURL('image/png');\n      const styles = this.canvas.toDataURL('@/assets/girl/girl4.png')\n      this.imgSrc = image;\n      this.valueUrl = this.imgSrc\n      this.style = styles\n      console.log(this.style)\n      this.$emit('refreshDataList', this.imgSrc);\n      this.sentImage();\n      this.canvas=null\n    },\n    // 打开摄像头\n    OpenCamera() {\n      console.log('打开摄像头');\n      this.getCamera();\n    },\n    // 关闭摄像头\n    CloseCamera() {\n      console.log('关闭摄像头');\n      this.$refs.video.srcObject.getTracks()[0].stop();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.clothing {\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n#clothing-v {\n  background: url(\"@/assets/background.jpg\");\n  width: 100%;\n  height: 100%;\n  background-size: 100% 100%;\n}\n\n.win-up {\n  width: 100%;\n  height: 55%;\n  margin-top: 9%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.win-down {\n  margin-top: 1.5%;\n  margin-left: 1%;\n  width: 76%;\n  height: 25%;\n  margin-bottom: 0.5%;\n  background-color: white;\n  border-radius: 1vw;\n  position: relative;\n}\n\n.win-button {\n  width: 13.09vw;\n  height: 9.3vh;\n  cursor: pointer;\n}\n\n.win-show {\n  width: 80%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.all-button {\n  width: 20%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-end;\n}\n\n.win-photo {\n  width: 46.4vw;\n  height: 54.37vh;\n}\n\n.win-erweima {\n  position: absolute;\n  top: 50vh;\n  left: 50%;\n  width: 32.72vw;\n  height: 32.72vw;\n  transform: translate(-50%, -50%);\n  z-index: 9999;\n}\n\n.overlay {\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n}\n\n.gundong {\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.topgun {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  overflow: hidden;\n}\n\n.scroll-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  transition: transform 0.2s ease-out;\n}\n\n.smallbox {\n  margin-left: 1vh;\n  width: 24.15%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 0 0 auto;\n}\n\nimg.slide-image {\n  border: 0.2vw solid transparent;\n  width: 100%;\n  height: 80%;\n  cursor: pointer;\n}\n\n.control-img {\n  height: 25%;\n  width: 5%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  z-index: 10;\n}\n.control-img:hover{\n  cursor: pointer;\n}\n.pre-img {\n  left: 0;\n}\n\n.nex-img {\n  right: 0;\n}\nvideo {\n  width: 46.4vw;\n  height: 54.37vh;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}